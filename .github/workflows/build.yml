name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        check-latest: true

    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: frontend/yarn.lock

    - name: Install Wails
      run: |
        echo "Installing Wails..."
        go install github.com/wailsapp/wails/v2/cmd/wails@latest
        wails version
      timeout-minutes: 10

    - name: Install frontend dependencies
      run: |
        cd frontend
        yarn install --frozen-lockfile
      timeout-minutes: 10

    - name: Build Windows
      if: matrix.platform == 'windows-latest'
      run: |
        echo "Building for Windows..."
        wails build -platform windows/amd64
      timeout-minutes: 15

    - name: Build macOS
      if: matrix.platform == 'macos-latest'
      run: |
        echo "Building for macOS..."
        wails build -platform darwin/universal
      timeout-minutes: 15

    - name: Build Linux
      if: matrix.platform == 'ubuntu-latest'
      run: |
        echo "Building for Linux..."
        wails build -platform linux/amd64
      timeout-minutes: 15

    - name: List build output
      run: |
        echo "Build completed. Listing files:"
        ls -la build/bin/ || echo "No build output found"

    - name: Upload Windows artifacts
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: URLNavigator-windows-amd64
        path: build/bin/URLNavigator.exe
        retention-days: 7

    - name: Upload macOS artifacts
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: URLNavigator-darwin-universal
        path: build/bin/URLNavigator.app
        retention-days: 7

    - name: Upload Linux artifacts
      if: matrix.platform == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: URLNavigator-linux-amd64
        path: build/bin/URLNavigator
        retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded artifacts
      run: |
        echo "Downloaded artifacts:"
        find artifacts -type f -exec ls -la {} \;

    - name: Prepare release files
      run: |
        mkdir -p release
        # Windows
        if [ -f "artifacts/URLNavigator-windows-amd64/URLNavigator.exe" ]; then
          cp "artifacts/URLNavigator-windows-amd64/URLNavigator.exe" "release/"
        fi
        # macOS
        if [ -d "artifacts/URLNavigator-darwin-universal/URLNavigator.app" ]; then
          tar -czf "release/URLNavigator-darwin-universal.tar.gz" -C "artifacts/URLNavigator-darwin-universal/" "URLNavigator.app"
        fi
        # Linux
        if [ -f "artifacts/URLNavigator-linux-amd64/URLNavigator" ]; then
          cp "artifacts/URLNavigator-linux-amd64/URLNavigator" "release/"
        fi
        ls -la release/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
        generate_release_notes: true
        draft: false
        prerelease: false
        body: |
          ## URL Navigator Release

          自动构建的跨平台版本：

          ### 下载
          - **Windows**: URLNavigator.exe
          - **macOS**: URLNavigator-darwin-universal.tar.gz (解压后运行URLNavigator.app)
          - **Linux**: URLNavigator

          ### 安装说明
          1. 下载对应平台的文件
          2. Windows用户直接运行.exe文件
          3. macOS用户解压.tar.gz文件后运行.app
          4. Linux用户给文件添加执行权限：`chmod +x URLNavigator`
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}